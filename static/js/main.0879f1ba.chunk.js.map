{"version":3,"sources":["components/assets/PhotoMir.png","components/assets/js.gif","components/global/nav/nav.js","components/global/aboutme/aboutme.js","components/global/home/home.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","react_default","a","createElement","lib","brand","className","fixed","left","href","Component","Aboutme","props","src","PhotoMir","alt","class","Home","img5","App","nav_nav","home_home","aboutme_aboutme","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4TCgCzBC,mLAvBb,OACCC,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,MACPJ,EAAAC,EAAAC,cAAA,KAAGG,UAAY,gBAAf,oBAEAC,MAAQ,OACRC,MAAI,EACJF,UAAY,UAEXL,EAAAC,EAAAC,cAACC,EAAA,QAAD,KACCH,EAAAC,EAAAC,cAAA,KAAGG,UAAY,YAAYG,KAAK,eAAhC,oBAEDR,EAAAC,EAAAC,cAACC,EAAA,QAAD,KACCH,EAAAC,EAAAC,cAAA,KAAGG,UAAY,YAAYG,KAAK,eAAhC,eAEDR,EAAAC,EAAAC,cAACC,EAAA,QAAD,KACCH,EAAAC,EAAAC,cAAA,KAAGG,UAAY,YAAYG,KAAK,oBAAhC,qBAjBYC,sCCoBHC,EArBC,SAACC,GAChB,OACCX,EAAAC,EAAAC,cAAA,WAASG,UAAY,yBACpBL,EAAAC,EAAAC,cAAA,OAAKG,UAAY,cAChBL,EAAAC,EAAAC,cAAA,MAAIG,UAAY,kBAAhB,cACAL,EAAAC,EAAAC,cAAA,KAAGG,UAAY,6BAAf,gBACcL,EAAAC,EAAAC,cAAA,iDADd,8BAEuBF,EAAAC,EAAAC,cAAA,WAFvB,kJAGgJF,EAAAC,EAAAC,cAAA,WAHhJ,iNAQDF,EAAAC,EAAAC,cAAA,OAAKG,UAAY,wBAChBL,EAAAC,EAAAC,cAAA,OAAKU,IAAOC,IAAUC,IAAM,2BAAwBT,UAAY,eAChEL,EAAAC,EAAAC,cAAA,OAAKa,MAAM,wCCGAC,EAhBF,WACZ,OACChB,EAAAC,EAAAC,cAAA,WAASG,UAAW,mBACnBL,EAAAC,EAAAC,cAAA,OAAKG,UAAY,YAChBL,EAAAC,EAAAC,cAAA,OAAKG,UAAY,8DAChBL,EAAAC,EAAAC,cAAA,OAAKU,IAAOK,IAAMH,IAAM,OAAOT,UAAY,wBAE5CL,EAAAC,EAAAC,cAAA,OAAKG,UAAY,2BAChBL,EAAAC,EAAAC,cAAA,mCAGFF,EAAAC,EAAAC,cAAA,OAAKa,MAAM,cCICG,mLAZX,OACElB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,cAChBL,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAACkB,EAAD,MACApB,EAAAC,EAAAC,cAACmB,EAAD,eAPQZ,aCCEa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO5B,EAAAC,EAAAC,cAAC2B,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0879f1ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PhotoMir.692f5464.png\";","module.exports = __webpack_public_path__ + \"static/media/js.8bcfaef9.gif\";","import React, { Component } from 'react';\r\n\r\nimport './nav.css';\r\nimport { Navbar, NavItem } from 'react-materialize';\r\n\r\n// import logo from '../../assets/logo1.png';\r\n\r\nclass Nav extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Navbar brand={\r\n\t\t\t\t<p className = 'text-nav mir'>Mirian García</p>\r\n\t\t\t\t} \r\n\t\t\t\tfixed = 'true'\r\n\t\t\t\tleft \r\n\t\t\t\tclassName = 'color '>\r\n\t\t\t\t{/* <ul id = 'nav-mobile' > */}\r\n\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t<a className = ' text-nav' href='badges.html'>Acerca de Mí</a>\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t<a className = ' text-nav' href='badges.html'>Portafolio</a>\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t<a className = ' text-nav' href='collapsible.html'>Contacto</a>\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t{/* </ul> */}\r\n\t\t\t</Navbar>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport './aboutme.css';\r\n\r\nimport PhotoMir from '../../assets/PhotoMir.png';\r\n\r\n\r\nconst Aboutme = (props) => {\r\n\treturn (\r\n\t\t<section className = 'row aboutme text-body'>\r\n\t\t\t<div className = 'col s12 l5'>\r\n\t\t\t\t<h3 className = 'valign-wrapper'>Bienvenido</h3>\r\n\t\t\t\t<p className = 'text-body-size left-align'>\r\n\t\t\t\t\tMi nombre es <b>Mirian Ivonne García Hernández</b>.\r\n\t\t\t\t\tMe apasiona el código.<br/>\r\n\t\t\t\t\tActualmente soy Front-End Developer. Hago Web App's con JavaScript, implementando herramientas como React.js, Node.js, Materialize y Bootstrap.<br/> \r\n\t\t\t\t\tMe forje en el código en Laboratoria, pero como el mundo no se detiene, me considero estudiante de por vida y me gusta ser autodidacta, por lo que espero agregar mas tecnologías a la lista anterior.\r\n\t\t\t\t\t\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div className = 'col s12 l5 offset-l1'>\r\n\t\t\t\t<img src = {PhotoMir} alt = 'Mirian Garcia´s Photo' className = 'photo-mir ' />\r\n\t\t\t\t<div class=\"divider\"></div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Aboutme;","import React from 'react';\r\n// import { Carousel } from 'react-materialize';\r\n\r\nimport './home.css';\r\n// import PhotoMir from '../../assets/PhotoMir.png';\r\nimport img5 from '../../assets/js.gif';\r\n\r\n\r\nconst Home = () => {\r\n\treturn (\r\n\t\t<section className ='background-home'>\r\n\t\t\t<div className = 'row home'>\r\n\t\t\t\t<dic className = 'col s10 m6 l6 offset-s1 offset-m1 offset-l1 background-div'>\r\n\t\t\t\t\t<img src = {img5} alt = 'Logo' className = 'col s12 photo-home' />\r\n\t\t\t\t</dic>\r\n\t\t\t\t<div className = 'col s10 m5 l5 text-home'>\r\n\t\t\t\t\t<h2>Front-End Developer</h2>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"divider\"></div>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\n// import logo from '../../logo.svg';\r\nimport './App.css';\r\n\r\nimport Nav from '../global/nav/nav';\r\nimport Aboutme from '../global/aboutme/aboutme';\r\nimport Home from '../global/home/home';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <Nav/>\r\n          <Home/>\r\n          <Aboutme/>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}